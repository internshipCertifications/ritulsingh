var user_email_input = $('#email').val();
$(document).ready(function () {
    jQuery.validator.addMethod("is_student_email", function(value, element){
        if (student_email == value.toLowerCase()) {
            return false;
        } else {
            return true;
        };
    }, "You have entered your own email id. Please enter your family member's email id."); 
    
    jQuery.validator.addMethod("unique_family_emails", function(value, element){
        var values = $("input[name^='email']").map(function(){return $(this).val();}).get();
        var element_id = $(element).attr("id").slice(-1);
        values = values.slice(0,element_id);
        
        if (values.includes(value.toLowerCase())) {
            return false;
        } else {
            return true;
        };
    }, "This email id has already been added. Please enter unique email id.");
    
    $('#family_details_form').validate({
        onfocusout: function (element) {
            this.element(element);
        },
        rules: {
            'first_name[0]' : {
                required: true,
                maxlength: 100,
                user_name: true,
            },
            'last_name[0]' : {
                maxlength: 100,
                user_name: true,
            },
            'email[0]' : {
                required: true,
                maxlength: 100,
                is_student_email: true,
                unique_family_emails: true
            }
        },
        errorPlacement: function (label, element) {
            label.insertAfter(element);
        },
        highlight: function (label) {
            $(label).closest(".form-group").addClass('has-error');
            $(label).closest(".form-group").removeClass('has-success');
            $(label).closest('input').addClass('error');
            $(label).closest('input').removeClass('valid');
        },
        success: function (label) {
            $(label).closest(".form-group").addClass('has-success');
            $(label).closest(".form-group").removeClass('has-error');
            $(label).closest('input').addClass('valid');
            $(label).closest('input').removeClass('error');
        },
        submitHandler: function () {
            var data = $('#family_details_form').serialize();
            $('#correction').hide();
            var url = "/student/family_details_submit/" + certificate_id + '/' + certificate_key;
            NProgress.start();
            $('.loading_image').show();
            $.ajax(url, {
                data: data,
                success: family_details_success,
                error: onError,
                type: "POST"
            });
            return false;
        }
    });
    
    $('.copy_link_url').click(function () {
        var copy_text = $("<input>");
        $(this).append(copy_text);
        copy_text.val($('.copy_link_url').attr("data-link")).select();
        document.execCommand("copy");
        general_toast("Link copied");
        copy_text.remove();
        $.ajax('/student/certificate_click/' + certificate_id + '/' + certificate_key + '/copylink', {
            type: "get"
        });
        return false;
    });
    $('#family_modal-tab').click(function () {
        $('#family-details-modal').modal('show');
        $.ajax('/student/certificate_click/' + certificate_id + '/' + certificate_key + '/family_cta', {
            type: "get"
        });
        return false;
    });
    
    // var url = window.location.href;
    // var new_url = typeof url.split('?')[0] != undefined ? url.split('?')[0] : "";
    // window.history.pushState({}, document.title, new_url);
    // if (download_url) {
    //     window.location.href = download_url;
    // }
    $("#add_family_section").click(function(){
       if ($('#family_details').children().size() < 5){ 
            var count = $('#family_details').children().size();
            var $clone = $("#family_form_group").clone();
            $clone.find("input").val("").end();
            $clone.find('label.form-error').remove();
            $clone.find('.email-correction-prompt-message').remove();
            $clone.find('div.has-error').removeClass('has-error');
            $clone.find('label[for=email0]').attr('for', 'email' + count);
            $clone.find('label[for=first_name0]').attr('for', 'first_name' + count);
            $clone.find('label[for=last_name0]').attr('for', 'last_name' + count);
            $clone.find('#email0').attr('name', 'email[' + count + ']').attr('id', 'email' + count);
            $clone.find('#first_name0').attr('name', 'first_name[' + count + ']').attr('id', 'first_name' + count);
            $clone.find('#last_name0').attr('name', 'last_name[' + count + ']').attr('id', 'last_name' + count);
            $clone.find('.remove').attr('id', count);
            $('#family_details').append($clone);
            
            $('#end_line').show();
            if ($('#family_details').children().size() == 5) {
                $('#add_family_section').hide();
            }
            add_rules_for_validation(count);
       }
    });
    $(document).on('click', '#remove_section', function () {
        var id = $(this).closest('.remove').attr('id');
        if (id == 0) {
            return false;
        }
        var count = $('#family_details').children().size();
        remove_rules_for_validation(count - 1);
        update_error_labels_on_remove('email', id);
        update_error_labels_on_remove('first_name', id);
        update_error_labels_on_remove('last_name', id);
        $(this).closest('#family_form_group').remove();
        if ($('#family_details').children().size() <= 4){ 
            $('#add_family_section').show();
        }
        
        
        update_names_on_remove('email');
        update_names_on_remove('first_name');
        update_names_on_remove('last_name');
    });
    
    $('#family_details_form').keyup(function (event) {
        var id = '#' + event.target.id;
        var name = event.target.id;
        if (name.includes('email')) {
            var user_email_input_update = $(id).val();
            if (user_email_input !== user_email_input_update) {
                user_email_input = user_email_input_update;
                prompt_for_correct_email('family_details_form', name);
            }
        }
    });
    $("#family_details_form").keyup(function(event) {
        var id = event.target.id;
        if (id.includes('email')) {
            var element = $("input[name^='email']");
            $(element).each(
                function( index ) {
                    if ($(this).val() != '') {
                        $("#family_details_form").validate().element($(this));
                    }
                }
            );
            
        }
    });
    generate_certificate_image();
});

function generate_certificate_image() {
    var data = '&certificate_id=' + certificate_id + '&certificate_key=' + certificate_key;
    var url = "/student/generate_certificate_image/";
    $.ajax(url, {
        type: "POST",
        data: data,
        cache: false
    });
}

var family_details_success = function (data) {
    try {
        NProgress.done();
        $('.loading_image').hide();
        if (data.success === true) {
            $('#family-details-modal').hide();
            var message = data.message;
            var heading = data.success_heading;
            var url = "/student/certificate/" + certificate_id + '/' + certificate_key;
            
            success_modal(message, url, "OK", heading);
        } else {
            if (data.errorCode !== "Validation Error") {
                $('#family-details-modal').modal('hide');
            }
            throw_error(data.errorThrown);
        }
    } catch (e) {
        throw_error(e);
        NProgress.done();
        $('.loading_image').hide();
    }
};

function add_rules_for_validation(count) {
    var first_name_id = "#family_details_form #first_name" + count;
    var last_name_id = "#family_details_form #last_name" + count;
    var email_id = "#family_details_form #email" + count;
    $(first_name_id).each(function () {
        $(this).rules('add', {
            required: true,
            maxlength: 100,
            user_name: true,
        });
    });
     $(last_name_id).each(function () {
        $(this).rules('add', {
            maxlength: 100,
            user_name: true,
        });
    });
     $(email_id).each(function () {
        $(this).rules('add', {
            required: true,
            maxlength: 100,
            is_student_email: true,
            unique_family_emails: true
        });
    });
    
}

function remove_rules_for_validation(count) {
    var first_name_id = "#family_details_form #first_name" + count;
    var last_name_id = "#family_details_form #last_name" + count;
    var email_id = "#family_details_form #email" + count;
    $(first_name_id).each(function () {
        $(first_name_id).rules('remove');
    });
     $(last_name_id).each(function () {
        $(last_name_id).rules('remove');
    });
     $(email_id).each(function () {
        $(email_id).rules('remove');
    });
    
}
function update_names_on_remove(input_name) {
    var element = "input[name^='" + input_name + "']";
    $(element).each(
        function( index ) {
            this.name = input_name + "["+index+"]";
            this.id = input_name + index;
        }
    );
    var for_element = "label[for^='" + input_name + "']";
    $(for_element).filter('.control-label').each(
        function( index ) {
            var value = input_name + index;
            $(this).attr("for", value);
        }
    );
    var for_element = ".remove";
    $(for_element).each(
        function( index ) {
            $(this).attr("id", index);
        }
    );
}


function update_error_labels_on_remove(name, id) {
    var error_element = "#" + name +  id + "-error";
    $(error_element).remove();
    var size = $('#family_details').children().size();
    for (let i = parseInt(id) + 1; i < size; i++) {
        var error_element = "#" + name +  i + "-error";
        var value = name + (i-1);
        var id = name + (i-1) + "-error";
        $(error_element).filter('.help-block').attr("for", value);
        $(error_element).attr("id", id);
  }
    
}